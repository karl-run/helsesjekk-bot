name: Build and deploy
on: 
  push:
  workflow_dispatch:

env:
 REGISTRY: ghcr.io
 IMAGE_NAME: ${{ github.repository }}
 
jobs:
  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v3
      - uses: github/codeql-action/init@v2
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  build-and-publish:
    name: "Prod: Bygg, test og push Docker image"
    runs-on: ubuntu-latest
    permissions:
      packages: 'write'
      contents: 'read'
      id-token: 'write'
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: navikt/teamsykmelding-github-actions-workflows/actions/yarn-cached@node-20
        with:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: yarn lint
      - run: yarn build
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Push docker image to GHCR
        uses: docker/build-push-action@v4
        id: docker-build-push
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy-bot-to-bks:
    name: Deploy to prod
    needs: [build-and-publish, codeql-analysis]
    runs-on: self-hosted
    steps:
      - name: Kubernetes Set Context
        uses: Azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.BKS_PROD_KUBECONFIG }}

      - uses: actions/checkout@v3
      - name: Diff kustomization
        id: diff
        continue-on-error: true
        run: kubectl diff -k deploy
  
      - name: Restart Deployment
        if: success()
        run: kubectl rollout restart deployment helsesjekk-bot --namespace helsesjekk-bot
  
  
      - name: Apply deployment
        if: always() && steps.diff.outcome == 'failure'
        run: | 
          kubectl kustomize deploy
          kubectl apply -k deploy
